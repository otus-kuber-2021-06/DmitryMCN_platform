apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web-prod
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  template:
    metadata: 
      name: web-prod
      labels:
        app: web-prod
    spec:
      initContainers:
      - name: init
        image: busybox:1.31.1
        command: ['sh', '-c', 'echo Prod > /app/index.html']
        volumeMounts:
        - name: app
          mountPath: /app
      containers:
      - name: web-app
        image: dmitry79/nginx_img:0.1
        readinessProbe:
          httpGet:
            path: /index.html
            port: 8000
        livenessProbe:
          tcpSocket: { port: 8000 }
        ports:
         - containerPort: 80
        volumeMounts:
        - name: app
          mountPath: /app
      volumes:
      - name: app
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-canary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-canary
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  template:
    metadata:
      name: web-canary
      labels:
        app: web-canary
    spec:
      initContainers:
      - name: init
        image: busybox:1.31.1
        command:    ['sh', '-c', 'echo Cannary > /app/index.html']
        volumeMounts:
        - name: app
          mountPath: /app
      containers:
      - name: web-app
        image: dmitry79/nginx_img:0.1
        readinessProbe:
          httpGet:
            path: /index.html
            port: 8000
        livenessProbe:
          tcpSocket: { port: 8000 }
        ports:
         - containerPort: 80
        volumeMounts:
        - name: app
          mountPath: /app
      volumes:
      - name: app
        emptyDir: {}
